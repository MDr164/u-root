version: 2.1

# Needed for uploading coverage reports
orbs:
  codecov: codecov/codecov@3.2.5

workflows:
  ci:
    jobs:
      - build
      - unit-tests
      - race
      - check_templates
      - test-integration-amd64
      - test-integration-arm32
      - test-integration-arm64
      - test-tinygo

jobs:
  # This build for all supported architecture and platform combinations
  build:
    docker:
      - image: cimg/go:1.20
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Build CI tool
          working_directory: tools/ci
          command: go build
      - run:
          name: Test u-root build
          command: ./tools/ci/ci -verbose -build
            -target=all
            -buildtoolchain="std,tamago,tinygo"
            -arch="amd64,arm,arm64,riscv64"
            -platform=linux
          no_output_timeout: 15m

  # Run all unit tests and generate a coverage report
  unit-tests:
    resource_class: large
    docker:
      - image: cimg/go:1.20
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Build CI tool
          working_directory: tools/ci
          command: go build
      - run:
          name: Run unit tests
          command: ./tools/ci/ci -verbose -test
            -cover
          no_output_timeout: 15m
      - codecov/upload:
          file: coverage.txt

  # Run Golangs race condition detector
  race:
    resource_class: large
    docker:
      - image: cimg/go:1.20
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Build CI tool
          working_directory: tools/ci
          command: go build
      - run:
          name: Race condition detection
          command: ./tools/ci/ci -verbose -test
            -race
          no_output_timeout: 20m

  check_templates:
    docker:
      - image: cimg/go:1.20
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Build CI tool
          working_directory: tools/ci
          command: go build
      - run:
          name: Check all build templates
          command: ./tools/ci/ci -verbose -build
            -target=templates
            -arch="amd64,arm,arm64"
            -platform=linux
          no_output_timeout: 15m
      - store_artifacts:
          name: Store build stats
          path: /tmp/stats.json
          destination: stats.json

  test-integration-amd64:
    resource_class: large
    docker:
      - image: cimg/go:1.20
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Build CI tool
          working_directory: tools/ci
          command: go build
      - run:
          name: Run integration tests
          command: ./tools/ci/ci -verbose -test
            -integration=amd64
            -env="UROOT_QEMU_TIMEOUT_X=7"
          no_output_timeout: 15m

  test-integration-arm32:
    resource_class: large
    docker:
      - image: cimg/go:1.20
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Build CI tool
          working_directory: tools/ci
          command: go build
      - run:
          name: Run integration tests
          command: ./tools/ci/ci -verbose -test
            -integration=arm32
            -env="UROOT_QEMU_TIMEOUT_X=7"
          no_output_timeout: 15m

  test-integration-arm64:
    resource_class: large
    docker:
      - image: cimg/go:1.20
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Build CI tool
          working_directory: tools/ci
          command: go build
      - run:
          name: Run integration tests
          command: ./tools/ci/ci -verbose -test
            -integration=arm64
            -env="UROOT_QEMU_TIMEOUT_X=7"
          no_output_timeout: 15m

  test-tinygo:
    resource_class: large
    docker:
      - image: cimg/go:1.20
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Build CI tool
          working_directory: tools/ci
          command: go build
      - run:
          name: Run unit tests with TinyGo
          command: ./tools/ci/ci -verbose -test
            -testtoolchain="tinygo"
          no_output_timeout: 15m
